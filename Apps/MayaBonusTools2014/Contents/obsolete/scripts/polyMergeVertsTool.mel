// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc mergeToFirstVert(string $Selection1[], string $Selection2[]){

	float $pos[] = `xform -q -ws -t $Selection1[0]`;

	xform -a -ws -t $pos[0] $pos[1] $pos[2] $Selection2[0];

	polyMergeVertex  -d 0.0001 -ch 1 $Selection1[0] $Selection2[0];

	select -clear;


}


proc polyMergeVertsToolCtx(){
	
	scriptCtx
		-title "Poly Merge Verts"
		-image1 "polyMergeVertex.png"
		-toolCursorType "tumble"
		-totalSelectionSets 2
		
		-cumulativeLists false
		-expandSelectionList true
		-fcs ("mergeToFirstVert $Selection1 $Selection2;")

		-setNoSelectionPrompt "Select poly vert to merge to"
		//-setSelectionPrompt ("Select additional faces to wedge " +
		//	"and press Enter to complete")
		
		-setAutoToggleSelection true
		-setAutoComplete true
		-setSelectionCount 1
		-polymeshVertex true
		
		-setNoSelectionPrompt "Select poly vert to move and merge"
		//-setSelectionPrompt ("Select additional edges to wedge " +
		//	"about and press Enter to complete")
		-setAutoToggleSelection true
		-setAutoComplete true
		-setSelectionCount 1
		-polymeshVertex true
		
		
		//-exitUponCompletion true
		
		polyMergeVertsTool;
	
}




global proc polyMergeVertsTool(){
	
	if (!`contextInfo -exists polyMergeVertsTool`)
	{
		polyMergeVertsToolCtx;
	}
	setToolTo polyMergeVertsTool;
	
}
// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//// SCRIPT NAME: drawReduceValues.mel v1.4// AUTHOR: Quang Tran// LAST UPDATED: Oct. 15th, 2001.// TESTED ON: Maya 4.0// DESCRIPTION: For setting the values of the Options Window of the "Draw//              Reduce Tool" plugin.  Please see the file "readme.txt" or//              "drawReduceTool.cpp" for full details.//global proc drawReduceValues(string $toolName){   setParent (`toolPropertyWindow -q -location` + "|QT_drawReduceColumnLayout|QT_drawReduceTabs|QT_drawReduceTab");   string $icon = "drawReduceIcon.xpm";   string $help = "";   toolPropertySetCommon $toolName $icon $help;   frameLayout -e -en true -cl false QT_drawReduceFrame;   drawReduceOptionValues($toolName);   toolPropertySelect QT_drawReduceColumnLayout;}global proc drawReduceOptionValues(string $toolName){   intSliderGrp -e -value `optionVar -q QT_drawReduceMinSampleSize` QT_drawReduceMinSampleSizeIntSliderGrp;   radioButtonGrp -e -select `optionVar -q QT_drawReduceReductionType` QT_drawReduceReductionTypeRadioButtonGrp;   radioButtonGrp -e -en (`optionVar -q QT_drawReduceReductionType` == 1) -select `optionVar -q QT_drawReduceMergeVerticesAt` QT_drawReduceMergeVerticesAtRadioButtonGrp;   radioButtonGrp -e -select (`optionVar -q QT_drawReduceEdgeSnappingWhen`+1) QT_drawReduceEdgeSnappingWhenRadioButtonGrp;   radioButtonGrp -e -en `optionVar -q QT_drawReduceEdgeSnappingWhen` -select `optionVar -q QT_drawReduceEdgeSnappingType` QT_drawReduceEdgeSnappingTypeRadioButtonGrp;   floatSliderGrp -e -en (`optionVar -q QT_drawReduceEdgeSnappingWhen`&&(`optionVar -q QT_drawReduceEdgeSnappingType`==1)) -value `optionVar -q QT_drawReduceEdgeSnappingOffset` QT_drawReduceEdgeSnappingOffsetFloatSliderGrp;   intSliderGrp -e -en (`optionVar -q QT_drawReduceEdgeSnappingWhen`&&(`optionVar -q QT_drawReduceEdgeSnappingType`==2)) -value `optionVar -q QT_drawReduceEdgeSnappingIntervals` QT_drawReduceEdgeSnappingIntervalsIntSliderGrp;   checkBox -e -value `optionVar -q QT_drawReduceAutoBackfaceCulling` QT_drawReduceAutoBackfaceCullingCheckBox;}

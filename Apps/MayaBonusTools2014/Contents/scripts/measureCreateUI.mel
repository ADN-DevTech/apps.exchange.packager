// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

///////////////////////////////////////////////////////////////////////////////
//
//  Description:
//  UI hooks for the measure plug-in
//
///////////////////////////////////////////////////////////////////////////////

// Add menu entries to the Create Light menu
//
global proc string addMeasureMenuItems(string $measureMenu)
{
	string $menuName;
	string $res = "";

	$menuName = `menuItem -p $measureMenu -l "Surface"
		-ann "Measure the surface of the selected objects"
		-c "measure -s -ver" -i "surface.xpm"` ;
	$res = $res + ";deleteUI -mi " + $menuName;

	$menuName = `menuItem -p $measureMenu -l "Volume"
		-ann "Measure the volume of the selected objects"
		-c "measure -v -ver" -i "volume.xpm"` ;
	$res = $res + ";deleteUI -mi " + $menuName;

	return $res; 
}

// Add UI when plugin is loaded
///////////////////////////////////////////////////////////////////////////////
global string $SVCreateMenuVariable = "";
global proc measureCreateUI()
{ 
	// Build the actual UI for all those items:
    global string $gMainCreateMenu;

	string $parent = $gMainCreateMenu;	// Create menu
	string $cmd = "addMeasureMenuItems measureItem";
	addMenuItemSafe($parent, $cmd, "SVCreateMenuVariable");
}

// Remove UI when plugin is unloaded
///////////////////////////////////////////////////////////////////////////////
global proc measureDeleteUI()
{
    global string $gMainCreateMenu;

	string $parent = $gMainCreateMenu;	// Create menu
	removeMenuItemSafe($parent, "SVCreateMenuVariable");
}

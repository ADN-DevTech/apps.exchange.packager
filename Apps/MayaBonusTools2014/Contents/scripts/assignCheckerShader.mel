// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// international treaties.
//


global proc assignCheckerShader(){
	
	string $selection[] = `ls -selection`;
	
	string $shader = `shadingNode -asShader lambert`;
	string $texture = `shadingNode -asTexture checker`;

	//change shader colour	
	setAttr ($texture + ".color1") -type double3 .3 .3 .3 ;
	setAttr ($texture + ".color2") -type double3 .7 .7 .7 ;
	
	//adjust 2d texture
	string $placement = `shadingNode -asUtility place2dTexture`;
	connectAttr -f ($placement + ".outUV") ($texture + ".uvCoord");
	connectAttr -f ($placement + ".outUvFilterSize") ($texture + ".uvFilterSize");
	setAttr ($placement + ".repeatU") 8;
	setAttr ($placement + ".repeatV") 8;


	//connect to shader
	connectAttr -force ($texture + ".outColor") ($shader + ".color");

	//select object
	select -replace $selection;
	hyperShade -assign $shader;
	
}
// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// bonesOnCurve.mel
// 
// select a curve to build bones along

global proc bonesOnCurve( int $numBones, 
						 int $rebuildCurve,
						 int $addSplineIK){
	
	string $curves[] = `ls -selection`;

	for ($curve in $curves){
		if ($rebuildCurve){
			rebuildCurve -ch 1 
				-replaceOriginal 1 
				-rebuildType 0 
				-endKnots 1 
				-keepRange 0 
				-keepControlPoints 0 
				-keepEndPoints 0 
				-keepTangents 0 
				-spans 0
				-degree 2 
				-tolerance 0.01 
				$curve;
		}

		select -clear;
		string $curveInfo = `pointOnCurve -constructionHistory 1 $curve`;
		setAttr ($curveInfo + ".turnOnPercentage") 1;

		int $i = 0;
		string $joints[];
		for ($i; $i<=$numBones; $i++){
			float $parameter = $i * (1.0/$numBones);
			setAttr ($curveInfo + ".parameter") $parameter;
			float $position[] = getAttr ($curveInfo + ".position");
			$joints[$i] = `joint -position $position[0] $position[1] $position[2]`;
		}
		delete $curveInfo;
		joint -edit
			-orientJoint xyz
			$joints;

		if ($addSplineIK){
			select -replace $joints[0];
			select -toggle $joints[$numBones];
			select -toggle $curve;
			ikHandle -solver ikSplineSolver 
				-createCurve false;


		}
	}
}


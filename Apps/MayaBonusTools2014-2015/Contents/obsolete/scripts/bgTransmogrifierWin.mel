// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
// bgTransmogrifierWin.mel
//


global proc calculateShrinkGrowFalloff(){

	//print "\nCalculating falloff...";

	//calculate bbox for new falloff
	float	$falloffVal[];			//all possible falloff values
	float	$falloffSorted[];		//x, y, and z sorted for min/max
	int		$floatMethod;

	$floatMethod = `radioButtonGrp -query -select falloffGrp1`;
	if ($floatMethod == 0){
		$floatMethod = (3 + `radioButtonGrp -query -select falloffGrp2`);
	}
	
	float $bbox[] = `xform -query -worldSpace -boundingBox`;
	float $x = abs($bbox[3] - $bbox[0]);
	float $y = abs($bbox[4] - $bbox[1]);
	float $z = abs($bbox[5] - $bbox[2]);

	$falloffVal[0] = $x;
	$falloffVal[1] = $y;
	$falloffVal[2] = $z;
	$falloffSorted = `sort $falloffVal`;

	$falloffVal[3] = ($x + $y + $z)/3;	//average
	$falloffVal[4] = $falloffSorted[0];	//mimimum
	$falloffVal[5] = $falloffSorted[2];	//maximum

	if (!`exists propModValues`){
		source propModValues;
	}

	floatFieldGrp -edit 
		-value1 ($falloffVal[$floatMethod-1]/2) 
		shrinkGrowFalloff;
	//send value to linear distance cutoff
	propModLinearDistToSlope ($falloffVal[$floatMethod-1]/2);
	//send value to power distance cutoff
	propModCtx -edit 
		-powerCutoff ($falloffVal[$floatMethod-1]/2) 
		`currentCtx`;

}

global proc shrinkGrowSelectionDC(){

	global string $gShrinkGrowSelection[];
	global int $gshrinkGrowSelectionVal;
	$val = `floatSliderGrp -q -v shrinkGrowSlider`;

	if ($val >= $gshrinkGrowSelectionVal){
	
		PolySelectTraverse 1;
		$gshrinkGrowSelectionVal = $gshrinkGrowSelectionVal + 1;
	
	}else if ($val == 0){

		//do nothing

	}else{

		PolySelectTraverse 2;
		$gshrinkGrowSelectionVal = $gshrinkGrowSelectionVal - 1;

	}

	shrinkGrowSelectionCC;
}


global proc shrinkGrowSelectionCC(){

	//calculate bbox for new falloff
	float $falloffVal[];
	//float $sides[3];
	float $bbox[] = `xform -q -ws -bb`;
	//float $sides[0] = `abs($bbox[3] - $bbox[0])`;
	//float $sides[1] = abs($bbox[4] - $bbox[1]);
	//float $sides[2] = abs($bbox[5] - $bbox[2]);
	float $x = abs($bbox[3] - $bbox[0]);
	float $y = abs($bbox[4] - $bbox[1]);
	float $z = abs($bbox[5] - $bbox[2]);
	$falloffVal[0] = $x;
	$falloffVal[1] = $y;
	$falloffVal[2] = $z;
	$falloffVal = `sort $falloffVal`;

	//save value
	global int $gShrinkGrowSelectionVal;
	global string $gShrinkGrowSelection[];
	$val = `floatSliderGrp -q -v shrinkGrowSlider`;

	//set window accordingly
	floatSliderGrp -e -v 0 shrinkGrowSlider;
	floatFieldGrp -e -value1 ($falloffVal[2]/2) shrinkGrowFalloff;

	global int $gshrinkGrowSelectionVal;
	$gshrinkGrowSelectionVal = 0;

	//if using prop mod
	//*****
	//ProportionalModificationTool;
	if (`currentCtx` == "PropMod"){
		propModLinearDistToSlope ($falloffVal[2]/2);
	}
}


global proc bgTransmogrifierWin(){

	source propModValues;

	global string $gShrinkGrowSelection[];
	$gShrinkGrowSelection = `ls -sl`;

	string $geoTMWin = "geoTMWin";
	if (`window -exists $geoTMWin`)
		{deleteUI -wnd $geoTMWin;}

	window -t "Geometry Transmogrification Window" geoTMWin;

		columnLayout -adjustableColumn true;

		floatSliderGrp -label "Selection: Shrink"
			-extraLabel "Grow" 
			-min -3
			-max 3
			-value 0
			-field false	//true for debugging purposes
			-sliderStep 1.0
			-cc "shrinkGrowSelectionCC"
			-dc "shrinkGrowSelectionDC"
			-annotation "Shrink or grow the current component selection"
			shrinkGrowSlider;

		rowColumnLayout -numberOfColumns 2
			-columnWidth 1 225
			-columnWidth 2 225;

		button -label "Reselect Originals"
			-width 225
			-command "select -r $gShrinkGrowSelection"
			-annotation ("Reselect Originals: Reselect the original " +
				"components");

		button -label "Set New Originals"
			-width 225
			-command "$gShrinkGrowSelection = `ls -sl`;	shrinkGrowSelectionCC"
			-annotation ("Set New Originals: Store the current " +
				"selection as original");

		setParent ..;

		frameLayout -label "Proportional Modification" 
			-borderStyle "etchedOut"
			-collapsable true;

		columnLayout -adjustableColumn true;

		checkBoxGrp -label "Set Falloff:"
			-value1 true
			-annotation ("Set Falloff: Set falloff for Proportional" +
				"Modification Tool")
			setFalloffCheckBox;

		radioButtonGrp -numberOfRadioButtons 3
			-label "Distance Based On:" 
			-labelArray3 "X Axis" "Y Axis" "Z Axis" 
			-columnWidth3 75 75 75
			-annotation ("Distance Based On: Distance is calculated " +
				"relative to the active selection bounding box")
			-changeCommand "calculateShrinkGrowFalloff"
			falloffGrp1;
    
		radioButtonGrp -numberOfRadioButtons 3 
			-shareCollection falloffGrp1
			-label ""
			-labelArray3 "Average" "Minimum" "Maximum" 
			-columnWidth3 75 75 75
			-select 2	//select minimum by default
			-changeCommand "calculateShrinkGrowFalloff"
			falloffGrp2;

		floatFieldGrp
			-numberOfFields 1
			-label "Falloff: "
			//-minValue -10 
			//-maxValue 10 
			//-visible true //false when not debugging?
			-value1 0
			//-cc "propModLinearDistToSlope `floatField -q -v shrinkGrowFalloff`"
			shrinkGrowFalloff;

		checkBoxGrp -edit
			-changeCommand ("int $onOff = `checkBoxGrp -q -value1 setFalloffCheckBox`;" +
				"radioButtonGrp -edit -enable $onOff falloffGrp1;" +
				"radioButtonGrp -edit -enable $onOff falloffGrp2;" +
				"floatFieldGrp -edit -enable $onOff shrinkGrowFalloff")
			setFalloffCheckBox;
		
		floatFieldGrp -e 
			-cc "propModLinearDistToSlope `floatFieldGrp -q -value1 shrinkGrowFalloff`"
			shrinkGrowFalloff;
		
		button -label "Activate Proportional Modification Tool"
			//	need runtime command
			//-command "ProportionalModificationToolOptions"
			-command "setToolTo $gPropMod; toolPropertyWindow;"
			-annotation ("Proportional Modification Tool: Activate the " +
				"Proportional Modification Tool");

		setParent ..;

	showWindow;

}

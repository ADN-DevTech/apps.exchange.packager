// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc cutTilesForImage (int $numX,
							  int $numY,
							  int $resX,
							  int $resY,
							  string $inFile,
							  string $outFile,
							  string $fileFormat,
							  string $name
							  )
{

	//uv coords on sample plane
	float $xMin, $xMax, $yMin, $yMax ;

	//counters for x and y coords of tiles
	int $x;
	int $y;

	for ($x = 1; $x <= $numX; $x++){

		if ($x == 1) $xMin = 0;
		else $xMin = ($x - 1) * (1.0 / $numX);

		if ($x == $numX) $xMax = 1;
		else $xMax = $x * (1.0 / $numX);

		//count y in reverse to tile from top to bottom
		for ($y = $numY; $y >= 1; $y--){

			if ($y == 1) $yMin = 0;
			else $yMin = ($y - 1) * (1.0 / $numY);

			if ($y == $numX) $yMax = 1;
			else $yMax = $y * (1.0 / $numY);

			print "\n xmin "; print $xMin;
			print "\n xmax "; print $xMax;
			print "\n ymin "; print $yMin;
			print "\n ymax "; print $yMax;
			print "\nx ";print $x;
			print "\ny ";print $y;
			print "\n~~~~~~~~";

			convertSolidTx -rx $resX -ry $resY -sp 1 
				-spr $xMin $xMax $yMin $yMax 
				-n $outFile -fil $fileFormat
				-fin ($name + $x + $y + "." + $fileFormat) 
				$inFile; 
		}

		print "\nx out";
		int $y = $numY;

	}
}


/*


sample command

cutTilesForImage 3 3 64 64 file1 test1 jpg ruby



*/

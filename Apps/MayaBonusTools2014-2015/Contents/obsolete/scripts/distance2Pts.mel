// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//
//	Description:
//		Returns the distance between two 3D points.
//
global proc float distance2Pts( float $p1[], float $p2[] )
{
	if( size($p1) != 3 )
		warning("distance2Pts(): You must give a float array of 3 values as the 1st argument\n");
	if( size($p2) != 3 )
		warning("distance2Pts(): You must give a float array of 3 values as the 2nd argument\n");

	float $distance;
	float $v[3];
	$v[0] = $p1[0] - $p2[0];
	$v[1] = $p1[1] - $p2[1];
	$v[2] = $p1[2] - $p2[2];
	$distance = $v[0]*$v[0] + $v[1]*$v[1] + $v[2]*$v[2];
	$distance = sqrt( $distance );

	return $distance;
}


// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

global proc createAutoProjectionController(){

	string $objects[] = `ls -sl`;
	string $controller = `createNode -name "polyAutoProjControl#" polyAutoProj`;

	setAttr ($controller + ".optimize") 0;
	setAttr ($controller + ".layout") 3;

	for ($object in $objects){
		string $projection[] = `polyAutoProjection -pb 0 -ibd 1 -cm 0 -l 3 -sc 1 -o 0 -p 6 -ps 0.2 -ws 1 ($object + ".f[*]")`;
		connectAttr -f ($controller + ".translate") ($projection[0] + ".translate");
		connectAttr -f ($controller + ".rotate") ($projection[0] + ".rotate");
		connectAttr -f ($controller + ".scale") ($projection[0] + ".scale");
		connectAttr -f ($controller + ".pivot") ($projection[0] + ".pivot");
		connectAttr -f ($controller + ".planes") ($projection[0] + ".planes");
		connectAttr -f ($controller + ".optimize") ($projection[0] + ".optimize");
		connectAttr -f ($controller + ".layoutMethod") ($projection[0] + ".layoutMethod");
		connectAttr -f ($controller + ".layout") ($projection[0] + ".layout");
		connectAttr -f ($controller + ".skipIntersect") ($projection[0] + ".skipIntersect");
		connectAttr -f ($controller + ".percentageSpace") ($projection[0] + ".percentageSpace");
		connectAttr -f ($controller + ".scaleMode") ($projection[0] + ".scaleMode");
		connectAttr -f ($controller + ".projectBothDirections") ($projection[0] + ".projectBothDirections");
	}

	select -replace $objects;
	select -add $controller;
}
